{
  "name": "rng-js",
  "version": "1.0.1",
  "description": "Seedable random number generator functions.",
  "browser": "rng.js",
  "main": "index.js",
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/skeeto/rng-js.git"
  },
  "keywords": [
    "random",
    "seed",
    "poisson",
    "gamma",
    "rc4",
    "exponential"
  ],
  "author": {
    "name": "Christopher Wellons",
    "email": "wellons@nullprogram.com"
  },
  "license": "Unlicence",
  "bugs": {
    "url": "https://github.com/skeeto/rng-js/issues"
  },
  "homepage": "https://github.com/skeeto/rng-js",
  "devDependencies": {
    "browserify": "~3.20.0",
    "browserify-shim": "~3.1.5",
    "tap": "~0.4.8"
  },
  "browserify": {
    "transform": [
      "browserify-shim"
    ]
  },
  "browserify-shim": {
    "./rng.js": "RNG"
  },
  "readme": "# JavaScript seedable random number generator\n\nThe generator below, seeded with \"`Example`\" will produce the same\nvalues as below for each of these random number distributions across\nall browsers.\n\n```javascript\nvar rng = new RNG('Example');\nrng.random(40, 50);  // =>  42\nrng.uniform();       // =>  0.7972798995050903\nrng.normal();        // => -0.6698504543216376\nrng.exponential();   // =>  1.0547367609131555\nrng.poisson(4);      // =>  2\nrng.gamma(4);        // =>  2.781724687386858\n```\n\nThe underlying algorithm is RC4 and uniform number generation is about\n10x slower than `Math.random` in V8. What you get in exchange for that\nis a seedable generator and additional random distributions (see\nexample). You can still get speed *and* these additional distributions\nby using Math.random as the core uniform number generator.\n\n```javascript\nvar rng = new RNG(Math.random);\n```\n\nWhen no seed is provided, one is created randomly from available\nentropy sources. Seeds that are not strings are run through\nJSON.stringify() before being used.\n\nHere's how you would replace `Math.random` with a seeded generator.\n\n```javascript\nMath.random = RNG.prototype.uniform.bind(new RNG('my seed'));\n```\n\nFinally, for fun, a dice roller,\n\n```javascript\nvar dice = RNG.roller('4d6 + 10');\ndice(); // => 17\ndice(); // => 11\n```\n\n## Node.js Usage\n\n```javascript\nvar RNG = require('rng');\n```\n\nThis module can also be [browserified][browserify] thanks to\n[browserify-shim][shim].\n\n\n[browserify]: https://github.com/substack/node-browserify\n[shim]: https://github.com/thlorenz/browserify-shim\n",
  "readmeFilename": "README.md",
  "_id": "rng-js@1.0.1",
  "dist": {
    "shasum": "bf9941a85ddf129a25e10f22412c064fac06bdb0"
  },
  "_resolved": "git://github.com/skeeto/rng-js.git#b2efe15b66e5efa5dabaf2897ee0ae3ce5a7b30b",
  "_from": "rng-js@git://github.com/skeeto/rng-js.git#b2efe15b66e5efa5dabaf2897ee0ae3ce5a7b30b"
}
